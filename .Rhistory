source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(train_subject_train)
View(train_subject_train)
train_subject_train <- read.table(file = "UCI HAR Dataset/train/subject_train.txt")
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(X_test)
?rbind
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(X)
View(Y)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?tbl_df
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
subject
x
X
Y
?merge
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(Y_test)
X_tbl_names <- read.table(file = "UCI HAR Dataset/features.txt")
View(X_tbl_names)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(X)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
levels(Y$V1)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
install.packages("plyr")
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
revalue(Y$V1, c("1" =  "WALKING",
"2" =  "WALKING_UPSTAIRS",
"3" =  "WALKING_DOWNSTAIRS",
"4" =  "SITTING",
"5" =  "STANDING",
"6" =  "LAYING"))
View(Y)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(Y)
subject <- rbind(subject_train,subject_test)
Y <- rbind(Y_train, Y_test)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(dataset)
names(dataset)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
names(dataset)
View(subject)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
names(dataset)
names(subject) <- c("subject")
dataset <- cbind(X, subject) %>%
cbind(Y)
names(dataset)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?select
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
tbl_df(namesX)
data.frame
?data.frame
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(namesX)
select(namesX, contains("mean"), contains("std"))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(namesX)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?contains
select(namesX, contains("mean") | contains("std"))
select(namesX, contains("mean") | contains("std"))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
select(namesX, matches("mean()") | matches("std()"))
select(namesX, matches("mean()"))
select(namesX, matches("mean\(\)"))
select(namesX, matches("mean\\(\\)"))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
select(namesX, matches("/mean\\(\\)+/"))
select(namesX, matches("/mean\(\)*/g"))
select(namesX, matches("/mean\\(\\)*/g"))
select(namesX, matches("/mean*/g"))
select(namesX, length(grep(namesX$namesX,"/mean\(\)*/g)")>0)
select(namesX, length(grep(namesX$namesX,"/mean\\(\\)*/g)")>0)
grep(namesX$namesX,"/mean\\(\\)*/g)")>0
select(namesX, length(grep(namesX$namesX,"/mean\\(\\)*/g)")>0))
select(namesX, length(grep(namesX,"/mean\\(\\)*/g)")>0))
length(grep(namesX,"/mean\\(\\)*/g)")>0)
?grep
grep("/mean\\(\\)*/g)",namesX)
length(grep("/mean\\(\\)*/g)",namesX)>0)
length(grep("/mean\\(\\)*/g)",namesX))>0
grep("/mean\\(\\)*/g)",namesX$namesX)
length(grep("/mean\\(\\)*/g)",namesX$namesX))>0
length(grep("/mean*/g)",namesX$namesX))>0
length(grep("mean*g)",namesX$namesX))>0
grep("mean*)",namesX$namesX)
select(namesX, grep("mean())",namesX))
select(namesX, grep("mean()"),namesX))
select(namesX, grep("mean\\(\\)"),namesX))
select(namesX, grep("mean\\(\\)"),namesX)
select(namesX, grep("mean\\(\\)",namesX))
grep("mean\\(\\)",namesX$namesX)
select(namesX, grep("mean\\(\\)",namesX$namesX))
namesX[grep("mean\\(\\)",namesX$namesX),]
namesX[grep("mean\\(\\)",namesX$namesX) | namesX[grep("std\\(\\)",namesX$namesX),]
namesX[namesX[grep("std\\(\\)",namesX$namesX),]
namesX[grep("std\\(\\)",namesX$namesX)
namesX[grep("mean\\(\\)",namesX$namesX) | grep("std\\(\\)",namesX$namesX),]
grep("std\\(\\)",namesX$namesX)
grep("mean\\(\\)",namesX$namesX) | grep("std\\(\\)",namesX$namesX)
?wich
?select
filter(namesX, grep("mean\\(\\)",namesX$namesX) | grep("std\\(\\)",namesX$namesX))
filter(namesX, namesX$namesX == grep("mean\\(\\)",namesX$namesX) | namesX$namesX == grep("std\\(\\)",namesX$namesX))
filter(namesX, namesX$namesX == grep("mean\\(\\)",namesX$namesX), namesX$namesX == grep("std\\(\\)",namesX$namesX))
grep("mean\\(\\)",namesX$namesX) %>%
rbind(grep("std\\(\\)",namesX$namesX))
index <- grep("mean\\(\\)",namesX$namesX) %>%
rbind(grep("std\\(\\)",namesX$namesX))
View(index)
index <- grep("mean\\(\\)",namesX$namesX) %>%
cbind(grep("std\\(\\)",namesX$namesX))
View(index)
cbind(grep("mean\\(\\)",namesX$namesX),grep("std\\(\\)",namesX$namesX))
rbind(grep("mean\\(\\)",namesX$namesX),grep("std\\(\\)",namesX$namesX))
grep("mean\\(\\)",namesX$namesX)
c(grep("mean\\(\\)",namesX$namesX),grep("std\\(\\)",namesX$namesX))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
namesX[index,]
cbind(X, subject) %>%
cbind(Y) %>%
select(namesX)
dataset <- cbind(X, subject) %>%
cbind(Y) %>%
select(namesX)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
namesX
cbind(X, subject) %>%
cbind(Y) %>%
select(C(namesX))
select(dataset, namesX)
as.factor() namesX[index,])
as.factor(namesX[index,])
namesX[index,]
factor(namesX[index,])
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
factor(namesX)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
namesX <- factor(namesX)
cbind(X, subject) %>%
cbind(Y) %>%
select(namesX)
dataset <- cbind(X, subject) %>%
cbind(Y) %>%
select(match(namesX,names(dataset)))
cbind(X, subject) %>%
cbind(Y) %>%
select(match(namesX,names(dataset)))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
c(grep("mean\\(\\)",namesX$namesX),grep("std\\(\\)",namesX$namesX))
names(dataset)
View(dataset)
dataset <- cbind(X, subject) %>%
cbind(Y) %>%
select(match(c(namesX, "subject", "status"),names(dataset)))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
dataset <- cbind(X, subject) %>%
cbind(Y) %>%
select(match(c(namesX, "subject", "status"),names(dataset)))
View(dataset)
match(c(namesX, "subject", "status"),names(dataset))
select(match(c(namesX, "subject", "status"),names(dataset)))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
namesX <- c(names(X), "subject", "status")
namesX <- data.frame(namesX, stringsAsFactors = FALSE)
index <-  c(grep("mean\\(\\)",namesX$namesX),grep("std\\(\\)",namesX$namesX))
namesX <-namesX[index,]
namesX <- match(namesX,names(dataset))
cbind(X, subject) %>%
cbind(Y) %>%
select(match(namesX,names(dataset)))
namesX
namesX <- match(namesX,names(dataset))
match(namesX,names(dataset))
cbind(X, subject) %>%
cbind(Y) %>%
select(match(namesX,names(dataset)))
select(X,match(namesX,names(X))) %>%
cbind(subject) %>%
cbind(Y) %>%
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
dataset <- select(X,match(namesX,names(X))) %>%
cbind(subject) %>%
cbind(Y) %>%
View(dataset)
dataset <- select(X,match(namesX,names(X))) %>%
cbind(subject) %>%
cbind(Y)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(subject)
select(X,match(namesX,names(X)))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(dataset)
?avg
?summarize
?group_by
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
group_by(dataset, dataset$status, dataset$subject) %>%
lapply(FUN = mean)
group_by(dataset, dataset$status, dataset$subject)
group_by(dataset, dataset$status, dataset$subject) %>%
lapply(FUN = mean, na.rm= TRUE)
avarageDataSet <- group_by(dataset, dataset$status, dataset$subject) %>%
lapply(FUN = mean, na.rm= TRUE)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?mean
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?lapply
group_by(dataset, dataset$status, dataset$subject) %>%
lapply(FUN = mean, na.rm = TRUE)
group_by(dataset, dataset$status, dataset$subject) %>%
lapply(FUN = mean, na.rm = TRUE)
lapply(filter(dataset, -subject:-status),FUN = mean, na.rm = TRUE)
lapply(filter(dataset, -subject:-status),FUN = mean)
lapply(filter(dataset, -subject:-status),FUN = mean)
filter(dataset, -subject:-status)
filter(dataset, -subject,-status)
select(dataset, -subject,-status)
lapply(select(dataset, -subject:-status),FUN = mean)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
lapply(select(dataset, -subject:-status),FUN = mean)
avarageDataSet
?summarise
?mean
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
group_by(dataset, dataset$status, dataset$subject) %>%
summarise(tBodyAcc-mean()-X = mean(tBodyAcc-mean()-X))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
group_by(dataset, dataset$status, dataset$subject) %>%
summarise( mean(tBodyAcc-mean()-X))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
avarageDataSet
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
avarageDataSet
avarageDataSet <- group_by(dataset, dataset$status, dataset$subject) %>%
summarise(mean=mean(value))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?summarise_each
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
summarise_each(dataset,funs(mean), -subject, status)
summarise_each(dataset,funs(mean), -subject, -status)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
group_by(dataset, dataset$status) %>%
summarise_each(funs(mean), -subject, -status)
group_by(dataset, dataset$status, dataset$subject) %>%
summarise_each(funs(mean))
avarageDataSet <- group_by(dataset, dataset$status, dataset$subject)
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
avarageDataSet <- tbl_df(dataset)
avarageDataSet
avarageDataSet <- tbl_df(dataset) %>%
group_by(dataset$status, dataset$subject)
avarageDataSet
avarageDataSet <- tbl_df(dataset) %>%
group_by(dataset$status, dataset$subject) %>%
summarise_each(funs(mean), -dataset$status, -dataset$subject)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
summarise_each(group_by(dataset, status, subject), funs(mean),vars =  -status:-subject)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
df %>%
group_by(dataset, status, subject) %>%
summarise_each(funs(mean))
tbl_df(dataset) %>%
group_by( status, subject) %>%
summarise_each(funs(mean))
tbl_df(dataset) %>%
group_by( subject,status )
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
tbl_df(dataset) %>%
group_by( subject ) %>%
summarise_each(funs(mean))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
tbl_df(dataset) %>%
group_by( subject,status )
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
tbl_df(dataset) %>%
group_by( subject) %>%
summarise_each(funs(mean))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/T1.R')
group_by(batting, playerID)
filter(players, min_rank(desc(H)) <= 2 & H > 0)
mutate(players, G_rank = min_rank(G))
mutate(players, G_change = (G - lag(G)) / (yearID - lag(yearID)))
filter(players, G > mean(G))
# For each, player compute a z score based on number of games played
mutate(players, G_z = (G - mean(G)) / sd(G))
tbl_df(dataset) %>%
group_by( subject,status ) %>%
mutate_each(funs(mean))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(dataset)
View(avarageDataSet)
tbl_df(dataset) %>%
group_by( subject,status ) %>%
mutate_each(funs(mean))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
c(names(X), "subject", "status")
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
?read.table
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
read.table(file = "features.txt", stringsAsFactors = FALSE)
read.table(file = "UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
names_X_from_file <- read.table(file = "UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
View(avarageDataSet)
View(dataset)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
group_by(dataset, activity ,subject )
View(avarageDataSet)
dataset <-  select(X,match(namesX,names(X))) %>%
cbind(subject) %>%
cbind(Y)
View(dataset)
avarageDataSet <- group_by(dataset, activity ,subject ) %>%
mutate_each(funs(mean))
group_by(dataset, activity ,subject ) %>%
mutate_each(funs(mean))
avarageDataSet <- tbl_df(dataset) %>%
group_by(dataset, activity ,subject ) %>%
mutate_each(funs(mean))
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
tbl_df(dataset) %>%
group_by( activity ) %>%
mutate_each(funs(mean))
View(dataset)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
avarageDataSet <- tbl_df(dataset) %>%
group_by(activity)
summary(avarageDataSet)
tbl_df(dataset) %>%
group_by(activity) %>%
mutate_each(funs(mean))
tbl_df(dataset) %>%
group_by(activity) %>%
summarise_each(funs(mean))
avarageDataSet <- tbl_df(dataset) %>%
group_by(activity) %>%
summarise_each(funs(mean))
View(avarageDataSet)
tbl_df(dataset) %>%
group_by(activity, subject) %>%
summarise_each(funs(mean))
avarageDataSet <- tbl_df(dataset) %>%
group_by(activity, subject) %>%
summarise_each(funs(mean))
View(avarageDataSet)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/t2.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/t2.R')
aggregate(finalDataNoActivityType[,names(finalDataNoActivityType) != c('activityId','subjectId')],by=list(activityId=finalDataNoActivityType$activityId,subjectId = finalDataNoActivityType$subjectId),mean);
View(tidyData)
View(finalData)
finalData = rbind(trainingData,testData);
colNames  = colnames(finalData);
logicalVector = (grepl("activity..",colNames) | grepl("subject..",colNames) | grepl("-mean..",colNames) & !grepl("-meanFreq..",colNames) & !grepl("mean..-",colNames) | grepl("-std..",colNames) & !grepl("-std()..-",colNames));
finalData = finalData[logicalVector==TRUE];
View(finalData)
merge(finalData,activityType,by='activityId',all.x=TRUE);
finalData = merge(finalData,activityType,by='activityId',all.x=TRUE);
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
# Subset finalData table based on the logicalVector to keep only desired columns
finalData = finalData[logicalVector==TRUE];
# 3. Use descriptive activity names to name the activities in the data set
# Merge the finalData set with the acitivityType table to include descriptive activity names
finalData = merge(finalData,activityType,by='activityId',all.x=TRUE);
# Updating the colNames vector to include the new column names after merge
colNames  = colnames(finalData);
colnames(finalData);
?gsub
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
